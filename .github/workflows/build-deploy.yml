name: Build and Push Docker Image to GCR

on:
  push:
    branches:
      - test-feature

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    env:
      REPO: eu.gcr.io/breakingbad-w-kbit
      IMAGE: flask-app
    # outputs:
      # tag: ${{ steps.version_bump.outputs.tag }}
    steps:
      # Checkout code (to get helm chart)
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0


      # Set version and push tag
      - name: Set version
        id: version_bump
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          DEFAULT_BUMP: "patch"
          RELEASE_BRANCHES: "main"
      

      # Setup GCP
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_email: ${{ secrets.GKE_EMAIL }}
          service_account_key: ${{ secrets.GKE_KEY }}
          export_default_credentials: true

      - run: gcloud auth configure-docker
      # Push image
      - name: Build docker
        # run: docker build flask/. -t $REPO/$IMAGE:${{ steps.version_bump.outputs.tag }}
        run: docker pull yeasy/simple-web
      - name: Push image
        # run: docker push $REPO/$IMAGE:${{ steps.version_bump.outputs.tag }}
        run: docker push "$REPO/'yeasy/simple-web':latest"

  deploy_GKE:
    runs-on: 'ubuntu-latest'
    needs: [build]
    steps:
      - uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_email: ${{ secrets.GKE_EMAIL }}
          service_account_key: ${{ secrets.GKE_KEY }}
      - name: Install GKE auth plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin
      - name: Configure kubectl
        run: |
          gcloud container clusters get-credentials  breakingbad-w-kbit-gke --zone europe-west1-c --project breakingbad-w-kbit
      - name: checkout repo
        uses: actions/checkout@v2.3.4
      - name: Deploy application
        run: |
          kubectl apply -f mysql-secret.yml
          kubectl apply -f mysql-conf.yml
          kubectl apply -f mysql-deploy.yml
          kubectl apply -f deployment.yml
